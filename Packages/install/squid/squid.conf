#
# Recommended minimum configuration:
#
# the squid.conf file goes in /usr/local/squid/etc

#
# Enable and configure the ICAP client in Squid
#

icap_enable on
icap_preview_enable off
#icap_preview_size 1024
icap_preview_size -1
icap_send_client_ip on
# 6.22.2021  - disable icap failure limit
#  so don't get "suspending ICAP service for too many failures"
icap_service_failure_limit -1

# 6.1.2021 disable all response cacheing:
cache deny all

# Specifies that the request/response must be sent to the msp service before being cached.
icap_service service_msp_req reqmod_precache icap://127.0.0.1:1344/msp
icap_service service_msp_resp respmod_precache icap://127.0.0.1:1344/msp

# point to our MSP error files
error_directory /home/msspeak/Packages/c_icap-0.5.5/services/msp/errors

#
# Define what the squid content adaptation layer class maps
#

adaptation_access service_msp_req allow all
adaptation_access service_msp_resp allow all

#
#
# adaptation_service_set class_msp service_msp_req service_msp_respmod
#
#
# This is the traffic match ACL for ICAP.   It currently funnels everything to icap for inspection.
# This should change to an ACL that matches multispeak traffic, if possible.  Otherwise, msp will
# will have to perform all filtering work.
#
#adaptation_access class_msp allow all 

# Example rule allowing access from your local networks.
# Adapt to list your (internal) IP networks from where browsing
# should be allowed
#acl localnet src 0.0.0.1-0.255.255.255	# RFC 1122 "this" network (LAN)
#acl localnet src 10.0.0.0/8		# RFC 1918 local private network (LAN)
#acl localnet src 100.64.0.0/10		# RFC 6598 shared address space (CGN)
#acl localnet src 169.254.0.0/16 	# RFC 3927 link-local (directly plugged) machines
#acl localnet src fc00::/7       	# RFC 4193 local private network range
#acl localnet src fe80::/10      	# RFC 4291 link-local (directly plugged) machines
acl localnet src 172.16.0.0/12		# 321 WSL, 172.16.0.0 â€“ 172.31.255.255
acl localnet src 192.168.0.0/16		# RFC 1918 local private network (LAN)
# azure IPs:
acl localnet src 130.20.0.0/16    # pnnl
acl localnet src 10.16.124.0/24		# RFC 1918 local private network (LAN)
acl localnet src 68.113.31.136		# SOHO Router ISP-facing IP

acl SSL_ports port  443
acl SSL_ports port  8443
acl Safe_ports port 80		# http
acl Safe_ports port 8080	# http
acl Safe_ports port 21		# ftp
acl Safe_ports port 443		# https
acl Safe_ports port 70		# gopher
acl Safe_ports port 210		# wais
acl Safe_ports port 1025-65535	# unregistered ports
acl Safe_ports port 280		# http-mgmt
acl Safe_ports port 488		# gss-http
acl Safe_ports port 591		# filemaker
acl Safe_ports port 777		# multiling http
acl CONNECT method CONNECT

#
# Recommended minimum Access Permission configuration:
#
# Deny requests to certain unsafe ports
http_access deny !Safe_ports

# Deny CONNECT to other than secure SSL ports
http_access deny CONNECT !SSL_ports

# Only allow cachemgr access from localhost
http_access allow localhost manager
http_access deny manager

# We strongly recommend the following be uncommented to protect innocent
# web applications running on the proxy server who think the only
# one who can access services on "localhost" is a local user
#http_access deny to_localhost

#
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS
#

# Example rule allowing access from your local networks.
# Adapt localnet in the ACL section to list your (internal) IP networks
# from where browsing should be allowed
http_access allow localnet
http_access allow localhost

# And finally deny all other access to this proxy
http_access deny all

# Squid normally listens to port 3128
# http_port 3128 - set to listen for ipv4 only:
#http_port 0.0.0.0:3128

# Uncomment and adjust the following to add a disk cache directory.
#cache_dir ufs /usr/local/squid/var/cache/squid 100 16 256

# Leave coredumps in the first cache dir
coredump_dir /usr/local/squid/var/cache/squid

#
# Add any of your own refresh_pattern entries above these.
#
refresh_pattern ^ftp:		1440	20%	10080
refresh_pattern ^gopher:	1440	0%	1440
refresh_pattern -i (/cgi-bin/|\?) 0	0%	0
refresh_pattern .		0	20%	4320

#
#  Add Bumping settings
#
# cafile=/etc/ssl/certs/ca-certificates.crt \
http_port 3128 ssl-bump \
cert=/usr/local/squid/ssl_cert/squidCA.pem \
generate-host-certificates=on dynamic_cert_mem_cache_size=4MB

# For squid 4.x 
sslcrtd_program /usr/local/squid/libexec/security_file_certgen -s /var/lib/ssl_db -M 4MB

acl step1 at_step SslBump1
ssl_bump peek step1
ssl_bump bump all 
#http_port 0.0.0.0:3128

#-- sslproxy_flags DONT_VERIFY_PEER
#-- sslproxy_flags is not supported in squid 4.0, but sslproxy_cert_error seems to be:
#-- 	http://www.squid-cache.org/Doc/config/sslproxy_cert_error/
#-- 	Use this ACL to bypass server certificate validation errors.
#-- For example, the following lines will bypass all validation errors
#-- 	when talking to servers for example.com. All other
#-- 	validation errors will result in ERR_SECURE_CONNECT_FAIL error.
#-- 
#-- 		acl BrokenButTrustedServers dstdomain example.com
#-- 		sslproxy_cert_error allow BrokenButTrustedServers
#-- 		sslproxy_cert_error deny all
#-- 
#-- 	This clause only supports fast acl types.
#-- 	See http://wiki.squid-cache.org/SquidFaq/SquidAcl for details.
#-- 	Using slow acl types may result in server crashes
